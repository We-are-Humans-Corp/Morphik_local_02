#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ–≥–æ —Å—Ç–µ–∫–∞ Morphik
# –í–∫–ª—é—á–∞–µ—Ç: PostgreSQL, Redis, API, Worker, UI –∏ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ Ollama

set -e

echo "üöÄ –ó–∞–ø—É—Å–∫ Morphik..."
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
if ! docker compose version &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    exit 1
fi

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
WITH_OLLAMA=false
REBUILD=false
DETACHED=true

for arg in "$@"; do
    case $arg in
        --with-ollama)
            WITH_OLLAMA=true
            shift
            ;;
        --rebuild)
            REBUILD=true
            shift
            ;;
        --logs)
            DETACHED=false
            shift
            ;;
        --help)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./start-all.sh [–æ–ø—Ü–∏–∏]"
            echo ""
            echo "–û–ø—Ü–∏–∏:"
            echo "  --with-ollama  –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å –ª–æ–∫–∞–ª—å–Ω—ã–º Ollama"
            echo "  --rebuild      –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –≤—Å–µ –æ–±—Ä–∞–∑—ã"
            echo "  --logs         –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ (–Ω–µ –≤ —Ñ–æ–Ω–µ)"
            echo "  --help         –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
            echo ""
            echo "–ü—Ä–∏–º–µ—Ä—ã:"
            echo "  ./start-all.sh                    # –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
            echo "  ./start-all.sh --with-ollama      # –ó–∞–ø—É—Å–∫ —Å Ollama"
            echo "  ./start-all.sh --rebuild --logs   # –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –ª–æ–≥–∏"
            exit 0
            ;;
    esac
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
if [ ! -f .env ]; then
    echo "‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞—é –∏–∑ –ø—Ä–∏–º–µ—Ä–∞..."
    cp .env.example .env
    echo "üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞."
    exit 1
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker compose down

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
if [ "$REBUILD" = true ]; then
    echo "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤..."
    BUILD_FLAG="--build"
else
    BUILD_FLAG=""
    echo "üì¶ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–±—Ä–∞–∑—ã..."
fi

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
if [ "$WITH_OLLAMA" = true ]; then
    echo "üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –≤–∫–ª—é—á–∞—è Ollama..."
    PROFILE="--profile ollama"
else
    echo "üöÄ –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
    PROFILE=""
fi

if [ "$DETACHED" = true ]; then
    if [ "$REBUILD" = false ]; then
        docker compose $PROFILE up -d --no-build
    else
        docker compose $PROFILE up -d $BUILD_FLAG
    fi
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
    echo ""
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    sleep 10
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    echo ""
    echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
    docker compose ps
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–µ–π Ollama –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if [ "$WITH_OLLAMA" = true ]; then
        echo ""
        echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π Ollama..."
        docker exec morphik_local-ollama-1 ollama list || echo "–ú–æ–¥–µ–ª–∏ –µ—â–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è..."
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π
        echo "üì• –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥–µ–ª–µ–π..."
        docker exec morphik_local-ollama-1 ollama pull llama3.2:3b || true
        docker exec morphik_local-ollama-1 ollama pull nomic-embed-text || true
    fi
    
    echo ""
    echo "‚úÖ Morphik –∑–∞–ø—É—â–µ–Ω!"
    echo ""
    echo "üåê –î–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–∏—Å–∞–º:"
    echo "   - UI: http://localhost:3000"
    echo "   - API: http://localhost:8000"
    echo "   - API Docs: http://localhost:8000/docs"
    echo ""
    echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "   docker compose logs -f        # –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
    echo "   docker compose ps             # –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo "   docker compose down           # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo ""
else
    # –ó–∞–ø—É—Å–∫ —Å –≤—ã–≤–æ–¥–æ–º –ª–æ–≥–æ–≤
    docker compose $PROFILE up $BUILD_FLAG
fi